/*
* Copyright 2006-2009 Hangzhou Quanshun Technology Co.,Ltd.
*
* All right reserved.
*/
package $PojoControlPackage;

import com.tradeserving.core.json.JsonlibUtil;
import com.tradeserving.core.service.ServiceException;
import com.tradeserving.core.util.ParamUtil;
import $PojoManagerClasspath;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import java.io.IOException;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
/**
 * @author  $author
 * @since $Date
 * @version 1.0 
 */
@Controller
@RequestMapping("/$pojoDotdo")
public class $PojoControl{
	protected final Logger logger = LoggerFactory.getLogger(getClass());
	
	@Autowired
	private $PojoManager $pojoManager;
	
	/**
	 * 返回分页的json数据。
	 * @author $author
	 * @since $Date
	 */
	@RequestMapping(params = "method=list")
	public String list(HttpServletRequest request,
			HttpServletResponse response) {
		try {
			int pageSize = ParamUtil.getInt(request, "limit");
			int start = ParamUtil.getInt(request, "start");
			start = start / pageSize;
			$pojoManagerDotwriteJsonOfModelForPage(response.getWriter(), 
					start, pageSize, request);

		} catch (ServiceException e) {

			logger.error(e.getMessage(), e);
		} catch (IOException e) {
			logger.error(e.getMessage(), e);
		}
		return null;
	}
	
	/**
	 * 保存或更新。
	 * @author $author
	 * @since $Date
	 */
	@RequestMapping(params = "method=saveOrUpdate")
	public String saveOrUpdate(HttpServletRequest request,
			HttpServletResponse response) {
		try {			
			String jsonData = ParamUtil.getString(request, "data");
			jsonData = JsonlibUtil.preHandle(jsonData);
			$pojoManagerDotsaveOrUpdateModelByJsonData(jsonData);
			response.getWriter().print("{success:true}");			
		} catch (ServiceException e) {

			logger.error(e.getMessage(), e);
		} catch (IOException e) {
			logger.error(e.getMessage(), e);
		}
		return null;
	}
	
	/**
	 * 删除。
	 * @author $author
	 * @since $Date
	 */
	@RequestMapping(params = "method=delete")
	public String delete(HttpServletRequest request,
			HttpServletResponse response) {
		try {		
			String ids = ParamUtil.getString(request, "ids");
			$pojoManagerDotdeleteByIds(ids.split(","));
			response.getWriter().print("{success:true}");
		} catch (ServiceException e) {

			logger.error(e.getMessage(), e);
		} catch (IOException e) {
			logger.error(e.getMessage(), e);
		}
		return null;
	}

}
